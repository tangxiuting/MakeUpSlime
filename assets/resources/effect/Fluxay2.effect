// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        color: { value: [10.0,10.0,10.0,1.0] }
        factor: { value: 0.6 }
        width: { value: 0.02 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
    // 贴图采样器，来自于v2f管线
    uniform sampler2D texture;             
    // 当前点uv
    varying vec2 v_uv0;                

    uniform PROPERTIES{
      vec4  color;
      float factor;  
      float width; 
      float time;
    }

    
    void main()                                      
    {                                          
        vec4 texColor = texture2D(texture, v_uv0);  
    
        float distance = abs(v_uv0[0]+v_uv0[1]-tan(time))/1.414;   
 
        distance = 1.0-(1.0/width)*distance;  
        distance = max(distance, 0.0);  
        vec4 sample = vec4(0.0,0.0,0.0,0.0);  
        sample[0] = color[0] * distance;  
        sample[1] = color[1] * distance;  
        sample[2] = color[2] * distance;  
        sample[3] = distance;  
 
        float alpha = sample[3]*texColor[3];  
        texColor[0] = texColor[0] + sample[0]*alpha*factor;  
        texColor[1] = texColor[1] + sample[1]*alpha*factor;  
        texColor[2] = texColor[2] + sample[2]*alpha*factor;  
        gl_FragColor = texColor;  
    }
}%
